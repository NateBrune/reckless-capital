@layout('master')

@section('content')
@if(!swap)
<div class="box">
  <center>Invoice not found!</center>
</div>
@elseif(!swap.paid)
{{ script('js/qrcode.js') }}
<div class="box">
  <h1 align="center" class="title">Please pay the following lightning invoice.</h1>
  </h1>
  <br />
  <img id="success" src="/img/success.png" style="display:none">
  <center><canvas id="invoiceQRCode" width="300" height="300"></canvas></center>
  <br />
  <div class="notification is-light">
    <h1 align="center" class="subtitle">{{ swap.invoice }}</h1>
  </div>
  <div class="notification is-info">
      <h1 align="center" class="subtitle"> Total service fee: {{ quote }} Satoshis</h1>
  </div>
</div>
@else
<div class="box">
  <h1 align="center" class="title">Payment recieved! Your Bitcoins should be arive within 30 minutes. Thank you.</h1>
</div>
@endif
<script src="https://cdnjs.cloudflare.com/ajax/libs/qrious/4.0.2/qrious.min.js"></script>
<script>
  function makeQR(id, value){
    var qr = new QRious({
      element: document.getElementById(id),
      size: 300,
      level: "H",
      value: value
    })
  }

  function drawTick(canvasId) {
    var c = document.getElementById(canvasId);
    var ctx = c.getContext("2d");
    var img = document.getElementById("success");
    ctx.drawImage(img, 10, 10);
  }

  function drawCheck(canvasId) {
    var canvas = document.getElementById(canvasId);
    if (canvas.getContext){
        //circle  
        var ctx = canvas.getContext('2d');
        var centerX = canvas.width / 2;
        var centerY = canvas.height / 2;
        var radius = 90;
        //draw circle
        ctx.beginPath();
        ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);
        ctx.fillStyle = 'green';
        ctx.fill();
        ctx.lineWidth = 5;
        ctx.strokeStyle = '#fff';
        ctx.stroke();
      
        //draw tick
        ctx.beginPath();
        ctx.moveTo(125,150);
        ctx.lineTo(150,175);
        ctx.lineTo(200,125);
        ctx.lineWidth = 20;
        ctx.strokeStyle = '#fff';
        ctx.stroke();    
    }
  }

  var invoice = "{{ swap.invoice }}"
  makeQR('invoiceQRCode', invoice.toUpperCase())

  function timeout() {
    setTimeout(function () {
      var xmlHttp = new XMLHttpRequest();
      try{
        xmlHttp.open( "GET", '/v1/swapstatus/{{ swap.id }}', false ); // false for synchronous request
        xmlHttp.send( null );
        var response = JSON.parse(xmlHttp.responseText)
        if(response){
          console.log(response)
          if(response['paid']){
            drawCheck('invoiceQRCode')
            return
          }
        }
        timeout()
      } catch(error) {
        console.log(error)
        timeout()
      }

    }, 1500);
  }
  @if(!swap.paid)
  timeout()
  @endif

  //qrcode.makeCode(invoice.toUpperCase())
  </script>

@endsection