<!DOCTYPE html>
<html lang="en" style="background-color: #FFF;"><!-- style="background-image: url('/img/9.jpg'); background-repeat: round;"> -->
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Reckless Capital</title>
    {{ style('/css/fa.min.css') }}
    <!--{{ style('/css/bulma.min.css') }}-->
    <script type="text/javascript" src="/js/jsqrscanner.nocache.js"></script>
    <link rel="stylesheet" href="/css/united.min.css">
    <script>
        var totalbgCount = 18;
        function changeBackground() 
        {
            var num = Math.ceil( Math.random() * totalbgCount );
            document.body.background = 'img/'+num+'.jpg';
            document.body.style.backgroundRepeat = "round";// Background repeat
        }

        function updateURLParameter(url, param, paramVal){
        var TheAnchor = null;
        var newAdditionalURL = "";
        var tempArray = url.split("?");
        var baseURL = tempArray[0];
        var additionalURL = tempArray[1];
        var temp = "";

        if (additionalURL) 
        {
            var tmpAnchor = additionalURL.split("#");
            var TheParams = tmpAnchor[0];
            TheAnchor = tmpAnchor[1];
            if(TheAnchor)
            additionalURL = TheParams;

            tempArray = additionalURL.split("&");

            for (var i=0; i<tempArray.length; i++)
            {
            if(tempArray[i].split('=')[0] != param)
            {
                newAdditionalURL += temp + tempArray[i];
                temp = "&";
            }
            }        
        }
        else
        {
            var tmpAnchor = baseURL.split("#");
            var TheParams = tmpAnchor[0];
            TheAnchor  = tmpAnchor[1];

            if(TheParams)
            baseURL = TheParams;
        }

        if(TheAnchor)
            paramVal += "#" + TheAnchor;

        var rows_txt = temp + "" + param + "=" + paramVal;
        return baseURL + "?" + newAdditionalURL + rows_txt;
    }

    function loadPage(page){
        var url = updateURLParameter(window.location.href, 'page', page)
        document.location.href = url
    }
    function loadAltProfile(id){
        document.getElementById(id).src = "img/profile.svg"
    }

    function addWebcamElement(elementId, callback){
    	var element = document.getElementById(elementId);
    	if(element)
    	{
            if(element.style.display == "none"){
                element.style.display = "block"
                JsQRScannerReady_callback(callback)
            } else {
                element.style.display = "none"
            }
    	}
    }
    
    //funtion returning a promise with a video stream
    function provideVideoQQ(){
        return navigator.mediaDevices.enumerateDevices()
        .then(function(devices) {
            var exCameras = [];
            devices.forEach(function(device) {
            if (device.kind === 'videoinput') {
                exCameras.push(device.deviceId)
            }
        });
            
        return Promise.resolve(exCameras);
        }).then(function(ids){
            if(ids.length === 0)
            {
              return Promise.reject('Could not find a webcam');
            }
            
            return navigator.mediaDevices.getUserMedia({
                video: {
                  'optional': [{
                    'sourceId': ids.length === 1 ? ids[0] : ids[1]//this way QQ browser opens the rear camera
                    }]
                }
            });        
        });                
    }  
  
    //this function will be called when JsQRScanner is ready to use
    var jbScanner = null
    function JsQRScannerReady_callback(callback)
    {
        //create a new scanner passing to it a callback function that will be invoked when
        //the scanner succesfully scan a QR code
        if(jbScanner == null){
            jbScanner = new JsQRScanner(callback, provideVideoQQ);
            //reduce the size of analyzed images to increase performance on mobile devices
            jbScanner.setSnapImageMaxSize(300);
            var scannerParentElement = document.getElementById("scanner");
            if(scannerParentElement)
            {
                //append the jbScanner to an existing DOM element
                jbScanner.appendTo(scannerParentElement);
            }
        } 
    }
    </script>
</head>
<body> <!-- onload="changeBackground()"> -->
    @!component('components.navbar', auth = auth)
    <div style="display: flex; flex-direction: column; min-height: 100vh;">
        <section class="section">
            <div class="container">
                <div class="columns is-vcentered is-two-thirds">
                    <div class="column">
                        @!section('content')
                    </div>
                </div>
            </div>
        </section>
        <div style="flex-grow: 0.90;"></div>
        <div class="columns is-centered">
            <div class="column is-half">
                <center>
                    <a href="https://discord.gg/HTaZRk9" class="button is-info has-text-centered">Join our Discord</a>
                    <a href="https://twitter.com/RecklessCapital" class="button is-primary has-text-centered">Follow us on Twitter</a>
                    <a href="https://gitlab.com/NateBrune/atlanta" class="button is-link has-text-centered">Fork us on Gitlab</a>
                </center>
            </div>
        </div>
    </div>
    
</body>
</html>